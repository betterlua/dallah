{
	// Place your meteor workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	"Command": {
		"scope": "rust",
		"prefix": "command",
		"body": [
			"use async_trait::async_trait;",
			"use crate::cli::{MeteorCommand, MeteorResult};",
			"use thiserror::Error;",
			"\n",
			"#[derive(clap::Parser, Debug)]",
			"#[clap(about = \"$2\")]",
			"pub struct $1 {",
			"\n",
			"}",
			"\n",
			"#[derive(Debug, Error)]",
			"pub enum $1Error {}",
			"\n",
			"#[async_trait]",
			"impl MeteorCommand<$1Error> for $1 {",
			"    async fn execute(&self) -> MeteorResult<$1Error> {",
			"        Ok(())",
			"    }",
			"}",
		],
		"description": "Create a meteor command"
	}
}
